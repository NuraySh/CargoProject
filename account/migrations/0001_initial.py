# Generated by Django 4.1.4 on 2023-04-07 10:24

import django.db.models.deletion
from django.db import migrations, models

import account.helpers
import account.validators


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="PhonePrefix",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "prefix_number",
                    models.CharField(
                        choices=[
                            ("+99455", "+99455"),
                            ("+99450", "+99450"),
                            ("+99451", "+99451"),
                            ("+99470", "+99470"),
                            ("+99477", "+99477"),
                            ("+99499", "+99499"),
                        ],
                        max_length=6,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Warehouse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("GN", "Ganjlik"),
                            ("NR", "Narimanov"),
                            ("20Jan", "20 January"),
                        ],
                        max_length=5,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="email address",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=25, verbose_name="first name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=25, verbose_name="first name"),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("m", "male"), ("f", "female")], max_length=1
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        max_length=7, validators=[account.validators.validate_phone]
                    ),
                ),
                (
                    "gov_id_prefix",
                    models.CharField(
                        choices=[
                            ("AZE", "AZE"),
                            ("AA", "AA"),
                            ("MYI", "MYI"),
                            ("DYI", "DYI"),
                        ],
                        default="AZE",
                        max_length=3,
                    ),
                ),
                ("gov_id", models.CharField(max_length=8, unique=True)),
                (
                    "pin_code",
                    models.CharField(
                        max_length=7,
                        unique=True,
                        validators=[account.validators.validate_pin_code],
                    ),
                ),
                (
                    "client_code",
                    models.CharField(
                        default=account.helpers.id_gen,
                        editable=False,
                        max_length=9,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "monthly_expense",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                ("birth_date", models.DateField(null=True)),
                ("is_active", models.BooleanField(default=False)),
                ("is_blocked", models.BooleanField(default=False)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "branch",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="account.warehouse",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "phone_prefix",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="account.phoneprefix",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
